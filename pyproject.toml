#[tool.poetry]
#name = "src"
#version = "0.1.0"
#description = ""
#authors = ["Alexander Molofeev <alexandr.nino@gmail.com>"]
#
#[build-system]
#requires = ["poetry-core>=1.0.0"]
#build-backend = "poetry.core.masonry.api"
[project]
requires-python = ">=3.11"

[tool.isort]
profile = "hug"
src_paths = ["tests", "src"]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
lines_after_imports = 2
use_parentheses = false
from_first = false
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
preview = false  # disable unstable rules and fixes (by default)
select = [
    #    "DJ",  # flake8-django
    #    "FAST",  # FastAPI
    #    "AIR",  # Airflow
    "F", # pyflakes
    "E", "W", # pycodestyle
    "C90", # mccabe
    "I", # ISort
    "N", # pep8-naming
    "D", # pydocstyke
    "UP", # pyupgrade
    "YTT", # flake-2020
    "ANN", # flake8-annotations
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "COM", # flake8-commas
    #    "CPY", # flake8-copyright
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "T10", # flake8-debugger
    "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "LOG", # flake8-logging
    "G", # flake8-logging-format
    "INP", # flake8-no-pep420
    "PIE", # flake8-pie
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "TCH", # flake8-type-checking
    "INT", # flake8-gettext
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "TD", # flake8-todos
    "FIX", # flake8-fixme
    "ERA", # eradicate
    "PD", # pandas-vet
    "PGH", # pygrep-hooks
    "PL", # Pylint  (PLC, PLE, PLR, PLW)
    "TRY", # tryceratops
    "FLY", # flynt
    "NPY", # NumPy-specific rules
    "PERF", # Perflint
    "FURB", # refurb
#    "DOC", # pydoclint #  Selection `DOC` has no effect because preview is not enabled
    "RUF", # Ruff-specific rules
]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D107", # Missing docstring in `...`
    "D211", # no-blank-line-before-class
    "D213", # multi-line-summary-second-line
    "DOC402", # `yield` is not documented in docstring
    "TCH001", # Move application import `...` into a type-checking block
]

[tool.ruff.lint.isort]
no-sections = false